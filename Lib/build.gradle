apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.sdk_version
    defaultConfig {
        minSdkVersion rootProject.ext.android.min_sdk
        targetSdkVersion rootProject.ext.android.target_sdk
        versionCode rootProject.ext.android.code
        versionName rootProject.ext.android.name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.runner
    androidTestImplementation rootProject.ext.dependencies.espresso
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api rootProject.ext.dependencies.appcompatV7
    api rootProject.ext.dependencies.constraintLayout
    api rootProject.ext.dependencies.retrofit
    api rootProject.ext.dependencies.gson
    api rootProject.ext.dependencies.retrofit2Rxjava2Adapter
    api rootProject.ext.dependencies.okhttp
    api rootProject.ext.dependencies.loggingInterceptor
    api rootProject.ext.dependencies.rxjava
    api rootProject.ext.dependencies.rxandroid
    api rootProject.ext.dependencies.libRequest
    api rootProject.ext.dependencies.libAdapter
    api rootProject.ext.dependencies.systembartint
    api rootProject.ext.dependencies.banner
    api rootProject.ext.dependencies.fresco
    api rootProject.ext.dependencies.design
    api rootProject.ext.dependencies.drawable
    api rootProject.ext.dependencies.cardView
    api rootProject.ext.dependencies.smartRefreshLayout
    api rootProject.ext.dependencies.glide
    api rootProject.ext.dependencies.eventbus
    api rootProject.ext.dependencies.fragmentation
    api rootProject.ext.dependencies.xinge
    api rootProject.ext.dependencies.wup
    api rootProject.ext.dependencies.mid
    api rootProject.ext.dependencies.swipe
    api rootProject.ext.dependencies.multidex
    api rootProject.ext.dependencies.wavesidebar
    api rootProject.ext.dependencies.tinypinyin
    api rootProject.ext.dependencies.rxpermissions
    api rootProject.ext.dependencies.baseAdapter
    annotationProcessor rootProject.ext.dependencies.compiler
    api(rootProject.ext.dependencies.core_ktx) {
        transitive false
    }
    //后期可选配置引入框架
    //    api rootProject.ext.dependencies.multiImageSelector
}
repositories {
    mavenCentral()
}
